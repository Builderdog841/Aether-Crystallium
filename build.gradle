import net.neoforged.gradle.common.tasks.JarJar

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.108'
    id 'io.github.0ffz.github-packages' version '[1,2)'
}

version = '0.10.0'
group = 'net.builderdog.ancient_aether'
repositories {
    mavenLocal()
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    maven githubPackage.invoke("The-Aether-Team/The-Aether")
    maven githubPackage.invoke("The-Aether-Team/Nitrogen")
    maven githubPackage.invoke("The-Aether-Team/Cumulus")

    maven { url = "https://maven.theillusivec4.top/" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    flatDir {
        dir 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    implementation "com.aetherteam.aether:aether:${project.aether_version}"
    implementation "local:aeroblender:1.20.4-1.0.1-neoforge"
    implementation "local:TerraBlender:neoforge-1.20.4-3.3.0.12"
    implementation "com.aetherteam.nitrogen:nitrogen_internals:${project.nitrogen_version}"
    implementation "com.aetherteam.cumulus:cumulus_menus:${project.cumulus_version}"
    runtimeOnly("top.theillusivec4.curios:curios-neoforge:${project.curios_version}")
    compileOnly("top.theillusivec4.curios:curios-neoforge:${project.curios_version}:api")

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:${project.mixinextras_version}"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:${project.mixinextras_version}")) {
        jarJar.ranged(it, "[0.3.5,)")
    }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

tasks.named('jarJar', JarJar).configure {
    archiveClassifier = ''
}

build {
    dependsOn 'jarJar'
}