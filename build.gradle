import net.neoforged.gradle.common.tasks.JarJar

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.108'
    id 'io.github.0ffz.github-packages' version '[1,2)'
}

version = '0.10.0'
group = 'net.builderdog.ancient_aether'
base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        workingDirectory project.file('run')
        systemProperty "${mod_id}.iside", 'true'
        systemProperty  'forge.logging.console.level', 'info'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven githubPackage.invoke("The-Aether-Team/The-Aether")
    maven githubPackage.invoke("The-Aether-Team/Nitrogen")
    maven githubPackage.invoke("The-Aether-Team/Cumulus")

    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    flatDir {
        dir 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation "net.neoforged:neoforge:${project.neoforge_version}"
    implementation "com.aetherteam.aether:aether:${project.aether_version}"
    implementation "local:aeroblender:1.20.4-1.0.1-neoforge"
    implementation "com.github.glitchfiend:TerraBlender-forge:${project.terrablender_version}"
    implementation "com.aetherteam.nitrogen:nitrogen_internals:${project.nitrogen_version}"
    implementation "com.aetherteam.cumulus:cumulus_menus:${project.cumulus_version}"
    runtimeOnly("top.theillusivec4.curios:curios-neoforge:${project.curios_version}")
    compileOnly("top.theillusivec4.curios:curios-neoforge:${project.curios_version}:api")

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:${project.mixinextras_version}"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:${project.mixinextras_version}")) {
        jarJar.ranged(it, "[0.3.5,)")
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_name,
                "Specification-Vendor"    : "Ancient Aether",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Ancient Aether",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    archiveClassifier = 'no-embeds'
}

tasks.named('jarJar', JarJar).configure {
    archiveClassifier = ''
}

compileJava {
    options.incremental = false
}

tasks.register('sourceJar', Jar) {
    dependsOn 'classes'
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

build {
    dependsOn 'jarJar'
}